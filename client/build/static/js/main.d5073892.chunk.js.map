{"version":3,"sources":["components/Container/index.js","components/BookCards/index.js","components/Row/index.js","pages/searchPage.js","pages/savedPage.js","components/Wrapper/index.js","components/Header/index.js","App.js","registerServiceWorker.js","index.js"],"names":["Containers","props","react_default","a","createElement","Container","PortfolioCards","portfolio","Card","Header","name","Body","Title","Text","description","Button","variant","href","github","Rows","Row","children","searchPage","components_Container","components_Row","BookCards","savedPage","Wrapper","className","Jumbotron","Navbar","Nav","Link","App","react_router_dom","components_Header","components_Wrapper","react_router","exact","path","component","SearchPage","SavedPage","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.d5073892.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport \"./style.css\";\r\n\r\nfunction Containers(props) {\r\n  return <Container {...props}></Container>;\r\n}\r\n\r\nexport default Containers;\r\n","import React from \"react\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\nimport \"./style.css\";\r\n\r\nfunction PortfolioCards(props) {\r\n  const { portfolio } = props;\r\n  return (\r\n    // <div>\r\n    //   <br></br>\r\n    // </div>\r\n    <Card>\r\n      <Card.Header>{portfolio.name}</Card.Header>\r\n      <Card.Body>\r\n        <Card.Title>{portfolio.name}</Card.Title>\r\n        <Card.Text>{portfolio.description}</Card.Text>\r\n        <Button variant=\"primary\" href={portfolio.github}>\r\n          Github portfolio\r\n        </Button>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\nexport default PortfolioCards;\r\n","import React from \"react\";\r\nimport { Row } from \"react-bootstrap\";\r\n\r\nfunction Rows(props) {\r\n  return <Row>{props.children}</Row>;\r\n}\r\n\r\nexport default Rows;\r\n","import React from \"react\";\r\nimport Container from \"../components/Container\";\r\nimport Bookcards from \"../components/BookCards\";\r\nimport Row from \"../components/Row\";\r\n\r\nfunction searchPage() {\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Bookcards></Bookcards>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default searchPage;\r\n","import React from \"react\";\r\nimport Container from \"../components/Container\";\r\nimport Bookcards from \"../components/BookCards\";\r\nimport Row from \"../components/Row\";\r\n\r\nfunction savedPage() {\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Bookcards></Bookcards>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default savedPage;\r\n","import React from \"react\";\r\n\r\nfunction Wrapper(props) {\r\n  return <div className=\"wrapper\">{props.children}</div>;\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport { Jumbotron, Navbar, Nav } from \"react-bootstrap\";\r\nimport \"./style.css\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <header>\r\n      <Jumbotron>\r\n        <h1>Haylie Goh</h1>\r\n        <Navbar>\r\n          <Nav>\r\n            <Nav.Link href=\"/\">About Me</Nav.Link>\r\n            <Nav.Link href=\"/portfolio\">Portfolio</Nav.Link>\r\n          </Nav>\r\n        </Navbar>\r\n      </Jumbotron>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport SearchPage from \"../src/pages/searchPage\";\r\nimport SavedPage from \"../src/pages/savedPage\";\r\nimport Wrapper from \"../src/components/Wrapper\";\r\nimport Header from \"../src/components/Header\";\r\n\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Header></Header>\r\n        <Wrapper>\r\n          <Route exact path=\"/\" component={SearchPage} />\r\n          <Route exact path=\"/saved\" component={SavedPage} />\r\n        </Wrapper>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}